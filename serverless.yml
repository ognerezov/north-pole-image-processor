plugins:
  - serverless-offline
  - serverless-python-requirements

custom:
  pythonRequirements:
    slim: true
    layer: true
    dockerizePip: true

service: image-processor
frameworkVersion: '2||3'
useDotenv: true

package:
  patterns:
    - '!scripts/**'

provider:
  name: aws
  runtime: python3.8
  region: eu-west-1
  lambdaHashingVersion: 20201221
  environment:
    CORNER_RADIUS: ${env:CORNER_RADIUS}
    ICON_SIZE: ${env:ICON_SIZE}
    IMAGE_SIZE: ${env:IMAGE_SIZE}
    OUTPUT_BUCKET: ${env:OUTPUT_BUCKET}
    THUMBNAILS_BUCKET: ${env:THUMBNAILS_BUCKET}
    ORIGINALS_BUCKET: ${env:ORIGINALS_BUCKET}
    HEALTH_CHECK_URL: ${env:HEALTH_CHECK_URL}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:PutObject'
            - 's3:DeleteObject'
          Resource:
            - 'arn:aws:s3:::north-pole-thumbnails/*'
            - 'arn:aws:s3:::north-pole-original-images/*'
            - 'arn:aws:s3:::north-pole-images/*'
        - Effect: Allow
          Action:
            - 's3:ListBucket'
          Resource:
            - 'arn:aws:s3:::north-pole-thumbnails'
            - 'arn:aws:s3:::north-pole-original-images'
            - 'arn:aws:s3:::north-pole-images'
        - Effect: Allow
          Action:
            - 'lambda:InvokeFunction'
          Resource:
            - 'arn:aws:lambda:eu-west-1:992648939501:function:emailMe'
functions:
  image_processor:
    handler: on_image_update.on_image_update
    timeout: 30
    memorySize: 256
    layers:
      - arn:aws:lambda:${self:provider.region}:770693421928:layer:Klayers-p38-Pillow:3
    events:
      - s3:
          bucket: north-pole-original-images
          event: s3:ObjectCreated:*
          existing: true
  item_cleaner:
    handler: on_item_delete.on_item_delete
    timeout: 30
    memorySize: 256
  health_check:
    handler: health.check
    timeout: 60
    memorySize: 128
    events:
      - eventBridge:
          schedule: rate(10 minutes)
